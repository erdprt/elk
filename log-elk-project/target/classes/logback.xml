<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %level [%logger.%M:%line] %msg%n
			</pattern>
		</layout>
	</appender>

	<appender name="TCP"
		class="net.logstash.logback.appender.LogstashTcpSocketAppender">
		<destination>localhost:5000</destination>

		<!-- encoder is required -->
		<encoder class="net.logstash.logback.encoder.LogstashEncoder" />
	</appender>

	<appender name="TCP2"
		class="net.logstash.logback.appender.LogstashAccessTcpSocketAppender">
		<destination>localhost:5000</destination>

		<!-- encoder is required -->
		<encoder class="net.logstash.logback.encoder.LogstashAccessEncoder" />
	</appender>

	<appender name="TCP3"
		class="net.logstash.logback.appender.LogstashTcpSocketAppender">
		<destination>192.168.99.100:5000</destination>

		<encoder
			class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<mdc />
				<context /> <!--Outputs entries from logback's context -->
				<version /> <!-- Logstash json format version, the @version field in the output -->
				<logLevel />
				<loggerName />

				<pattern>
					<pattern> <!-- we can add some custom fields to be sent with all the log entries. { makke filtering easier in Logstash -->
						"appName": "elk-testdata",<!--or searching with Kibana -->
						"appVersion": "1.0"
						}
					</pattern>
				</pattern>

				<threadName />
				<message />

				<logstashMarkers /> <!-- Useful so we can add extra information for specific log lines as Markers -->
				<arguments /> <!--or through StructuredArguments -->

				<stackTrace />
			</providers>
		</encoder>
	</appender>

	<logger name="fr.erdprt.logs.LogGenerator" level="INFO">
		<appender-ref ref="TCP3" />
	</logger>

	<root level="ERROR">
	</root>
</configuration>